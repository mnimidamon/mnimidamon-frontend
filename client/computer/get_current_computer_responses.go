// Code generated by go-swagger; DO NOT EDIT.

package computer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// GetCurrentComputerReader is a Reader for the GetCurrentComputer structure.
type GetCurrentComputerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentComputerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentComputerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCurrentComputerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCurrentComputerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCurrentComputerOK creates a GetCurrentComputerOK with default headers values
func NewGetCurrentComputerOK() *GetCurrentComputerOK {
	return &GetCurrentComputerOK{}
}

/* GetCurrentComputerOK describes a response with status code 200, with default header values.

The current Computer.
*/
type GetCurrentComputerOK struct {
	Payload []*models.Computer
}

func (o *GetCurrentComputerOK) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current][%d] getCurrentComputerOK  %+v", 200, o.Payload)
}
func (o *GetCurrentComputerOK) GetPayload() []*models.Computer {
	return o.Payload
}

func (o *GetCurrentComputerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentComputerUnauthorized creates a GetCurrentComputerUnauthorized with default headers values
func NewGetCurrentComputerUnauthorized() *GetCurrentComputerUnauthorized {
	return &GetCurrentComputerUnauthorized{}
}

/* GetCurrentComputerUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetCurrentComputerUnauthorized struct {
	Payload *models.Error
}

func (o *GetCurrentComputerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current][%d] getCurrentComputerUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCurrentComputerUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentComputerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentComputerInternalServerError creates a GetCurrentComputerInternalServerError with default headers values
func NewGetCurrentComputerInternalServerError() *GetCurrentComputerInternalServerError {
	return &GetCurrentComputerInternalServerError{}
}

/* GetCurrentComputerInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetCurrentComputerInternalServerError struct {
	Payload *models.Error
}

func (o *GetCurrentComputerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current][%d] getCurrentComputerInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCurrentComputerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentComputerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

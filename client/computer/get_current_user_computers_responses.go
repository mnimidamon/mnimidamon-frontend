// Code generated by go-swagger; DO NOT EDIT.

package computer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// GetCurrentUserComputersReader is a Reader for the GetCurrentUserComputers structure.
type GetCurrentUserComputersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentUserComputersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentUserComputersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCurrentUserComputersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCurrentUserComputersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCurrentUserComputersOK creates a GetCurrentUserComputersOK with default headers values
func NewGetCurrentUserComputersOK() *GetCurrentUserComputersOK {
	return &GetCurrentUserComputersOK{}
}

/* GetCurrentUserComputersOK describes a response with status code 200, with default header values.

Current user computers
*/
type GetCurrentUserComputersOK struct {
	Payload []*models.Computer
}

func (o *GetCurrentUserComputersOK) Error() string {
	return fmt.Sprintf("[GET /users/current/computers][%d] getCurrentUserComputersOK  %+v", 200, o.Payload)
}
func (o *GetCurrentUserComputersOK) GetPayload() []*models.Computer {
	return o.Payload
}

func (o *GetCurrentUserComputersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserComputersUnauthorized creates a GetCurrentUserComputersUnauthorized with default headers values
func NewGetCurrentUserComputersUnauthorized() *GetCurrentUserComputersUnauthorized {
	return &GetCurrentUserComputersUnauthorized{}
}

/* GetCurrentUserComputersUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetCurrentUserComputersUnauthorized struct {
	Payload *models.Error
}

func (o *GetCurrentUserComputersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/computers][%d] getCurrentUserComputersUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCurrentUserComputersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentUserComputersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserComputersInternalServerError creates a GetCurrentUserComputersInternalServerError with default headers values
func NewGetCurrentUserComputersInternalServerError() *GetCurrentUserComputersInternalServerError {
	return &GetCurrentUserComputersInternalServerError{}
}

/* GetCurrentUserComputersInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetCurrentUserComputersInternalServerError struct {
	Payload *models.Error
}

func (o *GetCurrentUserComputersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/current/computers][%d] getCurrentUserComputersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCurrentUserComputersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentUserComputersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

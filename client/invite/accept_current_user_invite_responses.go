// Code generated by go-swagger; DO NOT EDIT.

package invite

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// AcceptCurrentUserInviteReader is a Reader for the AcceptCurrentUserInvite structure.
type AcceptCurrentUserInviteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptCurrentUserInviteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptCurrentUserInviteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptCurrentUserInviteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAcceptCurrentUserInviteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAcceptCurrentUserInviteOK creates a AcceptCurrentUserInviteOK with default headers values
func NewAcceptCurrentUserInviteOK() *AcceptCurrentUserInviteOK {
	return &AcceptCurrentUserInviteOK{}
}

/* AcceptCurrentUserInviteOK describes a response with status code 200, with default header values.

The accepted group object.
*/
type AcceptCurrentUserInviteOK struct {
	Payload *models.Group
}

func (o *AcceptCurrentUserInviteOK) Error() string {
	return fmt.Sprintf("[POST /users/current/invites/{group_id}/accept][%d] acceptCurrentUserInviteOK  %+v", 200, o.Payload)
}
func (o *AcceptCurrentUserInviteOK) GetPayload() *models.Group {
	return o.Payload
}

func (o *AcceptCurrentUserInviteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptCurrentUserInviteUnauthorized creates a AcceptCurrentUserInviteUnauthorized with default headers values
func NewAcceptCurrentUserInviteUnauthorized() *AcceptCurrentUserInviteUnauthorized {
	return &AcceptCurrentUserInviteUnauthorized{}
}

/* AcceptCurrentUserInviteUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type AcceptCurrentUserInviteUnauthorized struct {
	Payload *models.Error
}

func (o *AcceptCurrentUserInviteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/current/invites/{group_id}/accept][%d] acceptCurrentUserInviteUnauthorized  %+v", 401, o.Payload)
}
func (o *AcceptCurrentUserInviteUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptCurrentUserInviteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptCurrentUserInviteInternalServerError creates a AcceptCurrentUserInviteInternalServerError with default headers values
func NewAcceptCurrentUserInviteInternalServerError() *AcceptCurrentUserInviteInternalServerError {
	return &AcceptCurrentUserInviteInternalServerError{}
}

/* AcceptCurrentUserInviteInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type AcceptCurrentUserInviteInternalServerError struct {
	Payload *models.Error
}

func (o *AcceptCurrentUserInviteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/current/invites/{group_id}/accept][%d] acceptCurrentUserInviteInternalServerError  %+v", 500, o.Payload)
}
func (o *AcceptCurrentUserInviteInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptCurrentUserInviteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

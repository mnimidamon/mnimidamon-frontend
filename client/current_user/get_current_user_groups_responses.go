// Code generated by go-swagger; DO NOT EDIT.

package current_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// GetCurrentUserGroupsReader is a Reader for the GetCurrentUserGroups structure.
type GetCurrentUserGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentUserGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentUserGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCurrentUserGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCurrentUserGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCurrentUserGroupsOK creates a GetCurrentUserGroupsOK with default headers values
func NewGetCurrentUserGroupsOK() *GetCurrentUserGroupsOK {
	return &GetCurrentUserGroupsOK{}
}

/* GetCurrentUserGroupsOK describes a response with status code 200, with default header values.

Array of groups.
*/
type GetCurrentUserGroupsOK struct {
	Payload []*models.Group
}

func (o *GetCurrentUserGroupsOK) Error() string {
	return fmt.Sprintf("[GET /users/current/groups][%d] getCurrentUserGroupsOK  %+v", 200, o.Payload)
}
func (o *GetCurrentUserGroupsOK) GetPayload() []*models.Group {
	return o.Payload
}

func (o *GetCurrentUserGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserGroupsUnauthorized creates a GetCurrentUserGroupsUnauthorized with default headers values
func NewGetCurrentUserGroupsUnauthorized() *GetCurrentUserGroupsUnauthorized {
	return &GetCurrentUserGroupsUnauthorized{}
}

/* GetCurrentUserGroupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetCurrentUserGroupsUnauthorized struct {
	Payload *models.Error
}

func (o *GetCurrentUserGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/groups][%d] getCurrentUserGroupsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCurrentUserGroupsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentUserGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserGroupsInternalServerError creates a GetCurrentUserGroupsInternalServerError with default headers values
func NewGetCurrentUserGroupsInternalServerError() *GetCurrentUserGroupsInternalServerError {
	return &GetCurrentUserGroupsInternalServerError{}
}

/* GetCurrentUserGroupsInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetCurrentUserGroupsInternalServerError struct {
	Payload *models.Error
}

func (o *GetCurrentUserGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/current/groups][%d] getCurrentUserGroupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCurrentUserGroupsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentUserGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package group_computer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetGroupComputersOfComputerParams creates a new GetGroupComputersOfComputerParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetGroupComputersOfComputerParams() *GetGroupComputersOfComputerParams {
	return &GetGroupComputersOfComputerParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetGroupComputersOfComputerParamsWithTimeout creates a new GetGroupComputersOfComputerParams object
// with the ability to set a timeout on a request.
func NewGetGroupComputersOfComputerParamsWithTimeout(timeout time.Duration) *GetGroupComputersOfComputerParams {
	return &GetGroupComputersOfComputerParams{
		timeout: timeout,
	}
}

// NewGetGroupComputersOfComputerParamsWithContext creates a new GetGroupComputersOfComputerParams object
// with the ability to set a context for a request.
func NewGetGroupComputersOfComputerParamsWithContext(ctx context.Context) *GetGroupComputersOfComputerParams {
	return &GetGroupComputersOfComputerParams{
		Context: ctx,
	}
}

// NewGetGroupComputersOfComputerParamsWithHTTPClient creates a new GetGroupComputersOfComputerParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetGroupComputersOfComputerParamsWithHTTPClient(client *http.Client) *GetGroupComputersOfComputerParams {
	return &GetGroupComputersOfComputerParams{
		HTTPClient: client,
	}
}

/* GetGroupComputersOfComputerParams contains all the parameters to send to the API endpoint
   for the get group computers of computer operation.

   Typically these are written to a http.Request.
*/
type GetGroupComputersOfComputerParams struct {

	/* ComputerID.

	   Numeric ID of the Computer.
	*/
	ComputerID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get group computers of computer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGroupComputersOfComputerParams) WithDefaults() *GetGroupComputersOfComputerParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get group computers of computer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGroupComputersOfComputerParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) WithTimeout(timeout time.Duration) *GetGroupComputersOfComputerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) WithContext(ctx context.Context) *GetGroupComputersOfComputerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) WithHTTPClient(client *http.Client) *GetGroupComputersOfComputerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComputerID adds the computerID to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) WithComputerID(computerID int64) *GetGroupComputersOfComputerParams {
	o.SetComputerID(computerID)
	return o
}

// SetComputerID adds the computerId to the get group computers of computer params
func (o *GetGroupComputersOfComputerParams) SetComputerID(computerID int64) {
	o.ComputerID = computerID
}

// WriteToRequest writes these params to a swagger request
func (o *GetGroupComputersOfComputerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param computer_id
	if err := r.SetPathParam("computer_id", swag.FormatInt64(o.ComputerID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// DownloadBackupReader is a Reader for the DownloadBackup structure.
type DownloadBackupReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *DownloadBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadBackupOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDownloadBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadBackupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadBackupOK creates a DownloadBackupOK with default headers values
func NewDownloadBackupOK(writer io.Writer) *DownloadBackupOK {
	return &DownloadBackupOK{

		Payload: writer,
	}
}

/* DownloadBackupOK describes a response with status code 200, with default header values.

Binary string of the encoded file content.
*/
type DownloadBackupOK struct {
	Payload io.Writer
}

func (o *DownloadBackupOK) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current/groups/{group_id}/backups/{backup_id}/download][%d] downloadBackupOK  %+v", 200, o.Payload)
}
func (o *DownloadBackupOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadBackupBadRequest creates a DownloadBackupBadRequest with default headers values
func NewDownloadBackupBadRequest() *DownloadBackupBadRequest {
	return &DownloadBackupBadRequest{}
}

/* DownloadBackupBadRequest describes a response with status code 400, with default header values.

Supplied parameters were not okay.
*/
type DownloadBackupBadRequest struct {
	Payload *models.Error
}

func (o *DownloadBackupBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current/groups/{group_id}/backups/{backup_id}/download][%d] downloadBackupBadRequest  %+v", 400, o.Payload)
}
func (o *DownloadBackupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadBackupUnauthorized creates a DownloadBackupUnauthorized with default headers values
func NewDownloadBackupUnauthorized() *DownloadBackupUnauthorized {
	return &DownloadBackupUnauthorized{}
}

/* DownloadBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type DownloadBackupUnauthorized struct {
	Payload *models.Error
}

func (o *DownloadBackupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current/groups/{group_id}/backups/{backup_id}/download][%d] downloadBackupUnauthorized  %+v", 401, o.Payload)
}
func (o *DownloadBackupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadBackupNotFound creates a DownloadBackupNotFound with default headers values
func NewDownloadBackupNotFound() *DownloadBackupNotFound {
	return &DownloadBackupNotFound{}
}

/* DownloadBackupNotFound describes a response with status code 404, with default header values.

The specified resource was not found.
*/
type DownloadBackupNotFound struct {
	Payload *models.Error
}

func (o *DownloadBackupNotFound) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current/groups/{group_id}/backups/{backup_id}/download][%d] downloadBackupNotFound  %+v", 404, o.Payload)
}
func (o *DownloadBackupNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadBackupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadBackupInternalServerError creates a DownloadBackupInternalServerError with default headers values
func NewDownloadBackupInternalServerError() *DownloadBackupInternalServerError {
	return &DownloadBackupInternalServerError{}
}

/* DownloadBackupInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type DownloadBackupInternalServerError struct {
	Payload *models.Error
}

func (o *DownloadBackupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/current/computers/current/groups/{group_id}/backups/{backup_id}/download][%d] downloadBackupInternalServerError  %+v", 500, o.Payload)
}
func (o *DownloadBackupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

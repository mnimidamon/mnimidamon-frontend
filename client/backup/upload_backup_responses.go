// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// UploadBackupReader is a Reader for the UploadBackup structure.
type UploadBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadBackupOK creates a UploadBackupOK with default headers values
func NewUploadBackupOK() *UploadBackupOK {
	return &UploadBackupOK{}
}

/* UploadBackupOK describes a response with status code 200, with default header values.

The updated backup object.
*/
type UploadBackupOK struct {
	Payload *models.Backup
}

func (o *UploadBackupOK) Error() string {
	return fmt.Sprintf("[POST /users/current/computers/current/groups/{group_id}/backups/{backup_id}/upload][%d] uploadBackupOK  %+v", 200, o.Payload)
}
func (o *UploadBackupOK) GetPayload() *models.Backup {
	return o.Payload
}

func (o *UploadBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Backup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadBackupBadRequest creates a UploadBackupBadRequest with default headers values
func NewUploadBackupBadRequest() *UploadBackupBadRequest {
	return &UploadBackupBadRequest{}
}

/* UploadBackupBadRequest describes a response with status code 400, with default header values.

Supplied parameters were not okay.
*/
type UploadBackupBadRequest struct {
	Payload *models.Error
}

func (o *UploadBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/current/computers/current/groups/{group_id}/backups/{backup_id}/upload][%d] uploadBackupBadRequest  %+v", 400, o.Payload)
}
func (o *UploadBackupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadBackupUnauthorized creates a UploadBackupUnauthorized with default headers values
func NewUploadBackupUnauthorized() *UploadBackupUnauthorized {
	return &UploadBackupUnauthorized{}
}

/* UploadBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type UploadBackupUnauthorized struct {
	Payload *models.Error
}

func (o *UploadBackupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/current/computers/current/groups/{group_id}/backups/{backup_id}/upload][%d] uploadBackupUnauthorized  %+v", 401, o.Payload)
}
func (o *UploadBackupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadBackupInternalServerError creates a UploadBackupInternalServerError with default headers values
func NewUploadBackupInternalServerError() *UploadBackupInternalServerError {
	return &UploadBackupInternalServerError{}
}

/* UploadBackupInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type UploadBackupInternalServerError struct {
	Payload *models.Error
}

func (o *UploadBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/current/computers/current/groups/{group_id}/backups/{backup_id}/upload][%d] uploadBackupInternalServerError  %+v", 500, o.Payload)
}
func (o *UploadBackupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

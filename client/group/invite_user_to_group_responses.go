// Code generated by go-swagger; DO NOT EDIT.

package group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mnimidamonbackend/models"
)

// InviteUserToGroupReader is a Reader for the InviteUserToGroup structure.
type InviteUserToGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteUserToGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInviteUserToGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInviteUserToGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInviteUserToGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInviteUserToGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInviteUserToGroupOK creates a InviteUserToGroupOK with default headers values
func NewInviteUserToGroupOK() *InviteUserToGroupOK {
	return &InviteUserToGroupOK{}
}

/* InviteUserToGroupOK describes a response with status code 200, with default header values.

The newly created invite object.
*/
type InviteUserToGroupOK struct {
	Payload *models.Invite
}

func (o *InviteUserToGroupOK) Error() string {
	return fmt.Sprintf("[POST /users/current/groups/{group_id}/invites][%d] inviteUserToGroupOK  %+v", 200, o.Payload)
}
func (o *InviteUserToGroupOK) GetPayload() *models.Invite {
	return o.Payload
}

func (o *InviteUserToGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Invite)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUserToGroupBadRequest creates a InviteUserToGroupBadRequest with default headers values
func NewInviteUserToGroupBadRequest() *InviteUserToGroupBadRequest {
	return &InviteUserToGroupBadRequest{}
}

/* InviteUserToGroupBadRequest describes a response with status code 400, with default header values.

Supplied parameters were not okay.
*/
type InviteUserToGroupBadRequest struct {
	Payload *models.Error
}

func (o *InviteUserToGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/current/groups/{group_id}/invites][%d] inviteUserToGroupBadRequest  %+v", 400, o.Payload)
}
func (o *InviteUserToGroupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *InviteUserToGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUserToGroupUnauthorized creates a InviteUserToGroupUnauthorized with default headers values
func NewInviteUserToGroupUnauthorized() *InviteUserToGroupUnauthorized {
	return &InviteUserToGroupUnauthorized{}
}

/* InviteUserToGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type InviteUserToGroupUnauthorized struct {
	Payload *models.Error
}

func (o *InviteUserToGroupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/current/groups/{group_id}/invites][%d] inviteUserToGroupUnauthorized  %+v", 401, o.Payload)
}
func (o *InviteUserToGroupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *InviteUserToGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUserToGroupInternalServerError creates a InviteUserToGroupInternalServerError with default headers values
func NewInviteUserToGroupInternalServerError() *InviteUserToGroupInternalServerError {
	return &InviteUserToGroupInternalServerError{}
}

/* InviteUserToGroupInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type InviteUserToGroupInternalServerError struct {
	Payload *models.Error
}

func (o *InviteUserToGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/current/groups/{group_id}/invites][%d] inviteUserToGroupInternalServerError  %+v", 500, o.Payload)
}
func (o *InviteUserToGroupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *InviteUserToGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
